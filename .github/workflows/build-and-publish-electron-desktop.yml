name: electron desktop

on:
  push:
#    looks like it works as OR instead of AND
    branches: [ master, testnet ]
    tags: [ 'v*.*.*' ]
env:
  RELEASE_NAME_master: ""
  RELEASE_NAME_testnet: "-testnet"
jobs:
  build-electron:
    runs-on: ubuntu-latest
    steps:
      - name: set env BUILD_BRANCH
        run: echo "BUILD_BRANCH=$(echo $GITHUB_REF | sed 's:refs/heads/::')" >> $GITHUB_ENV
        
      - name: set env RELEASE_NAME
        env:
          RELEASE_NAME_KEY: RELEASE_NAME_${{ env.BUILD_BRANCH }}
        run: echo "RELEASE_NAME=$(echo ${!RELEASE_NAME_KEY})" >> $GITHUB_ENV
  
      # To build app in 32 bit from a machine with 64 bit
      - name: Install gcc-multilib
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y gcc-multilib g++-multilib
        
      # To build app for Windows on Linux
      # https://github.com/actions/virtual-environments/issues/743#issuecomment-616349857
      - name: Install Wine
        run: |
          sudo dpkg --add-architecture i386
          wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add -
          sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport
          sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main"
          sudo apt install --install-recommends winehq-stable
      
      - name: Install Wine
        run: wine --version

      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - run: npm ci

      - run: cp .env.master .env

      - name: Build
#        run: npm run electron:build
        run: npm run electron:build-x64

      - name: Release
        uses: softprops/action-gh-release@v0.1.5
#        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}${{ env.RELEASE_NAME }}
          files: tmp/electron/minter-console-*.{dmg,snap,zip,exe,AppImage}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
